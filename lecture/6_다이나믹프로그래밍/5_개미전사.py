# 개미 전사
'''
식량창고는 일직선으로 이어져 있다. 각 식량창고에는 정해진 수의 식량을 저장하고 있으며
식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다.
이때 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면
바로 알아챌 수 있다. 따라서 정찰별에게 들키지않고 식량창고를 
약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.

입력조건 : 3 <= N <= 100, 0 <= K <= 1,000
식량의 최댓값을 출력해라

입력 :  4
        1 3 1 5

'''

# 정수 N을 입력 받기
n = int(input())
# 모든 식량 정보 입력 받기
array = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 100 # 식량창고의 개수 N이 최대 100까지 주어졌기 때문에 *100을 해준다.

# 다이나믹 프로그래밍(Dynamic Programming) 진행 (보텀업)
d[0] = array[0]
d[1] = max(array[0], array[1]) # 첫번째 두번째 중 더 큰 값 고르면 된다
for i in range(2, n):
    d[i] = max(d[i - 1], d[i - 2] + array[i])

# 계산된 결과 출력
print(d[n - 1])
# 8